@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 220 20% 97%;
    --foreground: 220 10% 10%;

    --card: 0 0% 100%;
    --card-foreground: 220 10% 10%;

    --popover: 0 0% 100%;
    --popover-foreground: 220 10% 10%;

    --primary: 231 99% 61%;
    --primary-foreground: 0 0% 100%;

    --secondary: 220 15% 94%;
    --secondary-foreground: 220 10% 15%;

    --muted: 220 15% 94%;
    --muted-foreground: 220 10% 45%;

    --accent: 231 90% 96%;
    --accent-foreground: 231 99% 61%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --border: 220 20% 90%;
    --input: 220 20% 90%;
    --ring: 231 99% 61%;
    
    --radius: 0.5rem;
    
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
  }

  .dark {
    --background: 220 20% 10%;
    --foreground: 220 10% 95%;

    --card: 220 20% 13%;
    --card-foreground: 220 10% 95%;

    --popover: 220 20% 10%;
    --popover-foreground: 220 10% 95%;

    --primary: 231 99% 65%;
    --primary-foreground: 0 0% 100%;

    --secondary: 220 20% 17%;
    --secondary-foreground: 220 10% 95%;

    --muted: 220 20% 17%;
    --muted-foreground: 220 10% 60%;

    --accent: 220 20% 15%;
    --accent-foreground: 231 90% 75%;
    
    --destructive: 0 72.2% 50.6%;
    --destructive-foreground: 0 0% 100%;

    --border: 220 20% 20%;
    --input: 220 20% 20%;
    --ring: 231 99% 65%;

    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  @keyframes status-change-in {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  @keyframes shrink-width {
    from { width: 100%; }
    to { width: 0%; }
  }
  @keyframes heart-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); }
    100% { transform: scale(1); }
  }
}

@layer utilities {
    .drag-over-top {
        @apply border-t-2 border-t-primary;
    }
    .drag-over-bottom {
        @apply border-b-2 border-b-primary;
    }
    .animate-status-in {
      animation: status-change-in 0.2s ease-out;
    }
    .animate-timer {
      animation: shrink-width var(--toast-duration, 10s) linear forwards;
    }
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border-width: 0;
    }
    .animate-heart-pulse {
      animation: heart-pulse 0.4s ease-in-out;
    }
    .react-grid-layout {
      position: relative;
      transition: height 200ms ease;
    }
    .react-grid-item {
      transition: all 200ms ease;
      transition-property: left, top;
    }
    .react-grid-item.cssTransforms {
      transition-property: transform;
    }
    .react-grid-item.resizing {
      z-index: 1;
      will-change: width, height;
    }

    .react-grid-item.react-draggable-dragging {
      transition: none;
      z-index: 3;
      will-change: transform;
    }

    .react-grid-item.dropping {
      visibility: hidden;
    }

    .react-grid-item.react-grid-placeholder {
      background: hsl(var(--primary));
      opacity: 0.2;
      transition-duration: 100ms;
      z-index: 2;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      -o-user-select: none;
      user-select: none;
    }

    .react-grid-item > .react-resizable-handle {
      position: absolute;
      width: 20px;
      height: 20px;
      bottom: 0;
      right: 0;
      cursor: se-resize;
    }

    .react-grid-item > .react-resizable-handle::after {
      content: "";
      position: absolute;
      right: 3px;
      bottom: 3px;
      width: 5px;
      height: 5px;
      border-right: 2px solid hsl(var(--muted-foreground));
      border-bottom: 2px solid hsl(var(--muted-foreground));
    }
    .drag-handle {
        cursor: grab;
    }
    .react-draggable-dragging .drag-handle {
        cursor: grabbing;
    }
}
